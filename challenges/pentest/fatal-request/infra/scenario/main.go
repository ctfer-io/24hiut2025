package main

import (
	"github.com/ctfer-io/chall-manager/sdk"
	"github.com/ctfer-io/chall-manager/sdk/kubernetes"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	sdk.Run(func(req *sdk.Request, resp *sdk.Response, opts ...pulumi.ResourceOption) error {
		cm, err := kubernetes.NewExposedMonopod(req.Ctx, &kubernetes.ExposedMonopodArgs{
			Image:      pulumi.String("ctferio/fatal-request:latest"), // challenge Docker image
			Port:       pulumi.Int(22),                                // pod listens on port 22
			ExposeType: kubernetes.ExposeIngress,                      // expose the challenge through an ingress (HTTP)
			Hostname:   pulumi.String("24hiut2025.ctfer.io"),          // CTF hostname
			Identity:   pulumi.String(req.Config.Identity),            // identity will be prepended to hostname
		}, opts...)
		if err != nil {
			return err
		}
		resp.ConnectionInfo = cm.url.ApplyT(func(url string) string {
			host, port, _ := strings.Cut(url, ":")
			return fmt.Sprintf("ssh -p %s %s", port, host)
		}).(pulumi.StringOutput)
		return nil
	})
}
